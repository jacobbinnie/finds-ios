create table "public"."finds" (
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "review" text not null,
    "rating" numeric not null,
    "id" uuid not null default gen_random_uuid(),
    "photos" text[] not null,
    "place" uuid
);


alter table "public"."finds" enable row level security;

create table "public"."likes" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "profile" uuid not null,
    "find" uuid not null
);


alter table "public"."likes" enable row level security;

create table "public"."places" (
    "created_at" timestamp with time zone not null default now(),
    "lat" numeric not null,
    "lng" numeric not null,
    "name" text not null,
    "full_address" text not null,
    "locality" text,
    "postcode" text,
    "region" text,
    "country" text,
    "id" uuid not null default gen_random_uuid(),
    "hashed_mapbox_id" text not null,
    "categories" text[]
);


alter table "public"."places" enable row level security;

create table "public"."profile" (
    "id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "username" text not null,
    "firstname" text not null,
    "image" text
);


alter table "public"."profile" enable row level security;

CREATE UNIQUE INDEX finds_id_key ON public.finds USING btree (id);

CREATE UNIQUE INDEX finds_pkey ON public.finds USING btree (id);

CREATE UNIQUE INDEX likes_pkey ON public.likes USING btree (id);

CREATE UNIQUE INDEX places_mapbox_id_key ON public.places USING btree (hashed_mapbox_id);

CREATE UNIQUE INDEX places_pkey ON public.places USING btree (id);

CREATE UNIQUE INDEX profile_pkey ON public.profile USING btree (id);

alter table "public"."finds" add constraint "finds_pkey" PRIMARY KEY using index "finds_pkey";

alter table "public"."likes" add constraint "likes_pkey" PRIMARY KEY using index "likes_pkey";

alter table "public"."places" add constraint "places_pkey" PRIMARY KEY using index "places_pkey";

alter table "public"."profile" add constraint "profile_pkey" PRIMARY KEY using index "profile_pkey";

alter table "public"."finds" add constraint "finds_id_key" UNIQUE using index "finds_id_key";

alter table "public"."finds" add constraint "finds_place_fkey" FOREIGN KEY (place) REFERENCES places(id) not valid;

alter table "public"."finds" validate constraint "finds_place_fkey";

alter table "public"."finds" add constraint "finds_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profile(id) ON DELETE CASCADE not valid;

alter table "public"."finds" validate constraint "finds_user_id_fkey";

alter table "public"."likes" add constraint "likes_find_fkey" FOREIGN KEY (find) REFERENCES finds(id) ON DELETE CASCADE not valid;

alter table "public"."likes" validate constraint "likes_find_fkey";

alter table "public"."likes" add constraint "likes_profile_fkey" FOREIGN KEY (profile) REFERENCES profile(id) ON DELETE CASCADE not valid;

alter table "public"."likes" validate constraint "likes_profile_fkey";

alter table "public"."places" add constraint "places_mapbox_id_key" UNIQUE using index "places_mapbox_id_key";

alter table "public"."profile" add constraint "profile_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."profile" validate constraint "profile_id_fkey";

grant delete on table "public"."finds" to "anon";

grant insert on table "public"."finds" to "anon";

grant references on table "public"."finds" to "anon";

grant select on table "public"."finds" to "anon";

grant trigger on table "public"."finds" to "anon";

grant truncate on table "public"."finds" to "anon";

grant update on table "public"."finds" to "anon";

grant delete on table "public"."finds" to "authenticated";

grant insert on table "public"."finds" to "authenticated";

grant references on table "public"."finds" to "authenticated";

grant select on table "public"."finds" to "authenticated";

grant trigger on table "public"."finds" to "authenticated";

grant truncate on table "public"."finds" to "authenticated";

grant update on table "public"."finds" to "authenticated";

grant delete on table "public"."finds" to "service_role";

grant insert on table "public"."finds" to "service_role";

grant references on table "public"."finds" to "service_role";

grant select on table "public"."finds" to "service_role";

grant trigger on table "public"."finds" to "service_role";

grant truncate on table "public"."finds" to "service_role";

grant update on table "public"."finds" to "service_role";

grant delete on table "public"."likes" to "anon";

grant insert on table "public"."likes" to "anon";

grant references on table "public"."likes" to "anon";

grant select on table "public"."likes" to "anon";

grant trigger on table "public"."likes" to "anon";

grant truncate on table "public"."likes" to "anon";

grant update on table "public"."likes" to "anon";

grant delete on table "public"."likes" to "authenticated";

grant insert on table "public"."likes" to "authenticated";

grant references on table "public"."likes" to "authenticated";

grant select on table "public"."likes" to "authenticated";

grant trigger on table "public"."likes" to "authenticated";

grant truncate on table "public"."likes" to "authenticated";

grant update on table "public"."likes" to "authenticated";

grant delete on table "public"."likes" to "service_role";

grant insert on table "public"."likes" to "service_role";

grant references on table "public"."likes" to "service_role";

grant select on table "public"."likes" to "service_role";

grant trigger on table "public"."likes" to "service_role";

grant truncate on table "public"."likes" to "service_role";

grant update on table "public"."likes" to "service_role";

grant delete on table "public"."places" to "anon";

grant insert on table "public"."places" to "anon";

grant references on table "public"."places" to "anon";

grant select on table "public"."places" to "anon";

grant trigger on table "public"."places" to "anon";

grant truncate on table "public"."places" to "anon";

grant update on table "public"."places" to "anon";

grant delete on table "public"."places" to "authenticated";

grant insert on table "public"."places" to "authenticated";

grant references on table "public"."places" to "authenticated";

grant select on table "public"."places" to "authenticated";

grant trigger on table "public"."places" to "authenticated";

grant truncate on table "public"."places" to "authenticated";

grant update on table "public"."places" to "authenticated";

grant delete on table "public"."places" to "service_role";

grant insert on table "public"."places" to "service_role";

grant references on table "public"."places" to "service_role";

grant select on table "public"."places" to "service_role";

grant trigger on table "public"."places" to "service_role";

grant truncate on table "public"."places" to "service_role";

grant update on table "public"."places" to "service_role";

grant delete on table "public"."profile" to "anon";

grant insert on table "public"."profile" to "anon";

grant references on table "public"."profile" to "anon";

grant select on table "public"."profile" to "anon";

grant trigger on table "public"."profile" to "anon";

grant truncate on table "public"."profile" to "anon";

grant update on table "public"."profile" to "anon";

grant delete on table "public"."profile" to "authenticated";

grant insert on table "public"."profile" to "authenticated";

grant references on table "public"."profile" to "authenticated";

grant select on table "public"."profile" to "authenticated";

grant trigger on table "public"."profile" to "authenticated";

grant truncate on table "public"."profile" to "authenticated";

grant update on table "public"."profile" to "authenticated";

grant delete on table "public"."profile" to "service_role";

grant insert on table "public"."profile" to "service_role";

grant references on table "public"."profile" to "service_role";

grant select on table "public"."profile" to "service_role";

grant trigger on table "public"."profile" to "service_role";

grant truncate on table "public"."profile" to "service_role";

grant update on table "public"."profile" to "service_role";

create policy "Enable insert for users based on user_id"
on "public"."finds"
as permissive
for insert
to public
with check ((auth.uid() = user_id));


create policy "Enable read access for all users"
on "public"."finds"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."places"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."places"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."profile"
as permissive
for select
to public
using (true);



